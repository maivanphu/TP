//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFramworkDBfirst2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OdinCheckEntities : DbContext
    {
        public OdinCheckEntities()
            : base("name=OdinCheckEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AFFAIRE> AFFAIRE { get; set; }
        public virtual DbSet<PERSONNE> PERSONNE { get; set; }
        public virtual DbSet<RESUME> RESUME { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<VIDEO> VIDEO { get; set; }
    
        public virtual int spAddAffaire(string name, string comments, Nullable<System.DateTime> dateCreation)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var dateCreationParameter = dateCreation.HasValue ?
                new ObjectParameter("dateCreation", dateCreation) :
                new ObjectParameter("dateCreation", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddAffaire", nameParameter, commentsParameter, dateCreationParameter);
        }
    
        public virtual int spAddPersonne(string name, string username, string password, Nullable<int> roleid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddPersonne", nameParameter, usernameParameter, passwordParameter, roleidParameter);
        }
    
        public virtual int spAddRelation(Nullable<int> resumeId, Nullable<int> videoId)
        {
            var resumeIdParameter = resumeId.HasValue ?
                new ObjectParameter("ResumeId", resumeId) :
                new ObjectParameter("ResumeId", typeof(int));
    
            var videoIdParameter = videoId.HasValue ?
                new ObjectParameter("VideoId", videoId) :
                new ObjectParameter("VideoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddRelation", resumeIdParameter, videoIdParameter);
        }
    
        public virtual int spAddResume(Nullable<int> affaireId, Nullable<int> personneId, string resumeName, string resumeComments, Nullable<System.DateTime> resumeDateCreation, string resumeParameters)
        {
            var affaireIdParameter = affaireId.HasValue ?
                new ObjectParameter("AffaireId", affaireId) :
                new ObjectParameter("AffaireId", typeof(int));
    
            var personneIdParameter = personneId.HasValue ?
                new ObjectParameter("PersonneId", personneId) :
                new ObjectParameter("PersonneId", typeof(int));
    
            var resumeNameParameter = resumeName != null ?
                new ObjectParameter("ResumeName", resumeName) :
                new ObjectParameter("ResumeName", typeof(string));
    
            var resumeCommentsParameter = resumeComments != null ?
                new ObjectParameter("ResumeComments", resumeComments) :
                new ObjectParameter("ResumeComments", typeof(string));
    
            var resumeDateCreationParameter = resumeDateCreation.HasValue ?
                new ObjectParameter("ResumeDateCreation", resumeDateCreation) :
                new ObjectParameter("ResumeDateCreation", typeof(System.DateTime));
    
            var resumeParametersParameter = resumeParameters != null ?
                new ObjectParameter("ResumeParameters", resumeParameters) :
                new ObjectParameter("ResumeParameters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddResume", affaireIdParameter, personneIdParameter, resumeNameParameter, resumeCommentsParameter, resumeDateCreationParameter, resumeParametersParameter);
        }
    
        public virtual int spAddRole(Nullable<int> rolesId, string roleName)
        {
            var rolesIdParameter = rolesId.HasValue ?
                new ObjectParameter("RolesId", rolesId) :
                new ObjectParameter("RolesId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddRole", rolesIdParameter, roleNameParameter);
        }
    
        public virtual int spAddVideo(string name, string path, Nullable<System.DateTime> dateCreation, string comments, Nullable<System.DateTime> dateDebut, Nullable<long> videoDuration)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            var dateCreationParameter = dateCreation.HasValue ?
                new ObjectParameter("dateCreation", dateCreation) :
                new ObjectParameter("dateCreation", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("dateDebut", dateDebut) :
                new ObjectParameter("dateDebut", typeof(System.DateTime));
    
            var videoDurationParameter = videoDuration.HasValue ?
                new ObjectParameter("VideoDuration", videoDuration) :
                new ObjectParameter("VideoDuration", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddVideo", nameParameter, pathParameter, dateCreationParameter, commentsParameter, dateDebutParameter, videoDurationParameter);
        }
    
        public virtual int spDeleteAffaire(Nullable<int> affaireId)
        {
            var affaireIdParameter = affaireId.HasValue ?
                new ObjectParameter("AffaireId", affaireId) :
                new ObjectParameter("AffaireId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteAffaire", affaireIdParameter);
        }
    
        public virtual int spDeletePersonne(Nullable<int> personneId)
        {
            var personneIdParameter = personneId.HasValue ?
                new ObjectParameter("PersonneId", personneId) :
                new ObjectParameter("PersonneId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletePersonne", personneIdParameter);
        }
    
        public virtual int spDeleteRelation(Nullable<int> videoId, Nullable<int> resumeId)
        {
            var videoIdParameter = videoId.HasValue ?
                new ObjectParameter("VideoId", videoId) :
                new ObjectParameter("VideoId", typeof(int));
    
            var resumeIdParameter = resumeId.HasValue ?
                new ObjectParameter("ResumeId", resumeId) :
                new ObjectParameter("ResumeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteRelation", videoIdParameter, resumeIdParameter);
        }
    
        public virtual int spDeleteResume(Nullable<int> resumeId)
        {
            var resumeIdParameter = resumeId.HasValue ?
                new ObjectParameter("ResumeId", resumeId) :
                new ObjectParameter("ResumeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteResume", resumeIdParameter);
        }
    
        public virtual int spDeleteRole(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteRole", roleIdParameter);
        }
    
        public virtual int spDeleteVideo(Nullable<int> videoId)
        {
            var videoIdParameter = videoId.HasValue ?
                new ObjectParameter("VideoId", videoId) :
                new ObjectParameter("VideoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteVideo", videoIdParameter);
        }
    
        public virtual int spGet(string nomTable)
        {
            var nomTableParameter = nomTable != null ?
                new ObjectParameter("NomTable", nomTable) :
                new ObjectParameter("NomTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGet", nomTableParameter);
        }
    
        public virtual ObjectResult<spGetAffaire_Result> spGetAffaire()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAffaire_Result>("spGetAffaire");
        }
    
        public virtual ObjectResult<spGetPersonne_Result> spGetPersonne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPersonne_Result>("spGetPersonne");
        }
    
        public virtual ObjectResult<spGetRelation_Result> spGetRelation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetRelation_Result>("spGetRelation");
        }
    
        public virtual ObjectResult<spGetResume_Result> spGetResume()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetResume_Result>("spGetResume");
        }
    
        public virtual ObjectResult<spGetRole_Result> spGetRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetRole_Result>("spGetRole");
        }
    
        public virtual ObjectResult<spGetVideo_Result> spGetVideo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetVideo_Result>("spGetVideo");
        }
    
        public virtual int spUpdateAffaire(Nullable<int> id, string name, string comments, Nullable<System.DateTime> dateCreation)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var dateCreationParameter = dateCreation.HasValue ?
                new ObjectParameter("dateCreation", dateCreation) :
                new ObjectParameter("dateCreation", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateAffaire", idParameter, nameParameter, commentsParameter, dateCreationParameter);
        }
    
        public virtual int spUpdatePersonne(Nullable<int> id, string name, string user, string pass, Nullable<int> roleid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatePersonne", idParameter, nameParameter, userParameter, passParameter, roleidParameter);
        }
    
        public virtual int spUpdateRelation(Nullable<int> resumeId, Nullable<int> oldVideoId, Nullable<int> newVideoId)
        {
            var resumeIdParameter = resumeId.HasValue ?
                new ObjectParameter("ResumeId", resumeId) :
                new ObjectParameter("ResumeId", typeof(int));
    
            var oldVideoIdParameter = oldVideoId.HasValue ?
                new ObjectParameter("OldVideoId", oldVideoId) :
                new ObjectParameter("OldVideoId", typeof(int));
    
            var newVideoIdParameter = newVideoId.HasValue ?
                new ObjectParameter("NewVideoId", newVideoId) :
                new ObjectParameter("NewVideoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRelation", resumeIdParameter, oldVideoIdParameter, newVideoIdParameter);
        }
    
        public virtual int spUpdateResume(Nullable<int> resumeId, Nullable<int> affaireId, Nullable<int> personneId, string resumeName, string resumeComments, Nullable<System.DateTime> resumeDateCreation, string resumeParameters)
        {
            var resumeIdParameter = resumeId.HasValue ?
                new ObjectParameter("ResumeId", resumeId) :
                new ObjectParameter("ResumeId", typeof(int));
    
            var affaireIdParameter = affaireId.HasValue ?
                new ObjectParameter("AffaireId", affaireId) :
                new ObjectParameter("AffaireId", typeof(int));
    
            var personneIdParameter = personneId.HasValue ?
                new ObjectParameter("PersonneId", personneId) :
                new ObjectParameter("PersonneId", typeof(int));
    
            var resumeNameParameter = resumeName != null ?
                new ObjectParameter("ResumeName", resumeName) :
                new ObjectParameter("ResumeName", typeof(string));
    
            var resumeCommentsParameter = resumeComments != null ?
                new ObjectParameter("ResumeComments", resumeComments) :
                new ObjectParameter("ResumeComments", typeof(string));
    
            var resumeDateCreationParameter = resumeDateCreation.HasValue ?
                new ObjectParameter("ResumeDateCreation", resumeDateCreation) :
                new ObjectParameter("ResumeDateCreation", typeof(System.DateTime));
    
            var resumeParametersParameter = resumeParameters != null ?
                new ObjectParameter("ResumeParameters", resumeParameters) :
                new ObjectParameter("ResumeParameters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateResume", resumeIdParameter, affaireIdParameter, personneIdParameter, resumeNameParameter, resumeCommentsParameter, resumeDateCreationParameter, resumeParametersParameter);
        }
    
        public virtual int spUpdateRoles(Nullable<int> roleId, string roleName)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRoles", roleIdParameter, roleNameParameter);
        }
    
        public virtual int spUpdateVideo(Nullable<int> id, string name, string path, Nullable<System.DateTime> dateCreation, string comments, Nullable<System.DateTime> dateDebut, Nullable<long> videoDuration)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            var dateCreationParameter = dateCreation.HasValue ?
                new ObjectParameter("dateCreation", dateCreation) :
                new ObjectParameter("dateCreation", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var dateDebutParameter = dateDebut.HasValue ?
                new ObjectParameter("dateDebut", dateDebut) :
                new ObjectParameter("dateDebut", typeof(System.DateTime));
    
            var videoDurationParameter = videoDuration.HasValue ?
                new ObjectParameter("VideoDuration", videoDuration) :
                new ObjectParameter("VideoDuration", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateVideo", idParameter, nameParameter, pathParameter, dateCreationParameter, commentsParameter, dateDebutParameter, videoDurationParameter);
        }
    }
}
